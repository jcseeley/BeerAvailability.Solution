// <auto-generated />
using BeerReview.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerDrinker.Migrations
{
    [DbContext(typeof(BeerReviewContext))]
    partial class BeerReviewContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BeerReview.Models.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BeerId");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("BeerReview.Models.BeerDrinker", b =>
                {
                    b.Property<int>("BeerDrinkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("DrinkerId")
                        .HasColumnType("int");

                    b.HasKey("BeerDrinkerId");

                    b.HasIndex("BeerId");

                    b.HasIndex("DrinkerId");

                    b.ToTable("BeerDrinker");
                });

            modelBuilder.Entity("BeerReview.Models.Drinker", b =>
                {
                    b.Property<int>("DrinkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DrinkerId");

                    b.ToTable("Drinkers");
                });

            modelBuilder.Entity("BeerReview.Models.BeerDrinker", b =>
                {
                    b.HasOne("BeerReview.Models.Beer", "Beer")
                        .WithMany("JoinEntities")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerReview.Models.Drinker", "Drinker")
                        .WithMany("JoinEntities")
                        .HasForeignKey("DrinkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Drinker");
                });

            modelBuilder.Entity("BeerReview.Models.Beer", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("BeerReview.Models.Drinker", b =>
                {
                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
